import os
import requests
import pandas as pd
import time

# Function to get Access Token from Spotify
def get_spotify_token(client_id, client_secret):
    auth_url = 'https://accounts.spotify.com/api/token'
    auth_response = requests.post(auth_url, {
        'grant_type': 'client_credentials',
        'client_id': client_id,
        'client_secret': client_secret,
    })
    return auth_response.json().get('access_token')

# Function to search for a track and get the album cover
def get_cover_url(track_name, artist_name, token):
    query = f"track:{track_name} artist:{artist_name}"
    url = f"https://api.spotify.com/v1/search?q={query}&type=track&limit=1"
    response = requests.get(url, headers={
        'Authorization': f'Bearer {token}'
    })
    json_data = response.json()
    try:
        first_result = json_data['tracks']['items'][0]
        return first_result['album']['images'][0]['url']
    except (KeyError, IndexError):
        return None

# Your Spotify credentials
client_id = "5cd59d2639e84c9bbf26aa3fee1019ab"
client_secret = "b1a52ee9428943cea8361f7835e9c28b"

# Get Access Token
access_token = get_spotify_token(client_id, client_secret)
print("‚úÖ Access Token:", access_token[:40], "...")

# Check if the file exists
file_name = 'spotify-2023.csv'
if not os.path.exists(file_name):
    print(f"The file '{file_name}' does not exist in the current folder: {os.getcwd()}")
    file_name = input("Please enter the full path to the file: ")
    if not os.path.exists(file_name):
        raise FileNotFoundError(f"File not found: {file_name}")

# Read the file
df_spotify = pd.read_csv(file_name, encoding='latin-1')

# ‚úÖ Print column names to check
print("\nüìå Columns in the file:")
print(df_spotify.columns.tolist())

# ‚úÖ Show first 5 rows to see how the data looks
print("\nüìå First 5 rows of the file:")
print(df_spotify.head())

# Create a new column for album cover URLs
df_spotify['cover_url'] = None

# Fetch album cover images
for i, row in df_spotify.iterrows():
    # ‚ùó Need to know the correct column names
    # For now, use the first column for the track and the second for the artist
    track_name = str(row[df_spotify.columns[0]])
    artist_name = str(row[df_spotify.columns[1]])
    
    cover = get_cover_url(track_name, artist_name, access_token)
    df_spotify.at[i, 'cover_url'] = cover
    print(f"{i+1}/{len(df_spotify)} - {track_name} ‚Üí {cover}")
    time.sleep(0.1)  # Delay to avoid hitting the API too fast

# Save the new file
output_file = 'spotify-2023-with-covers.csv'
df_spotify.to_csv(output_file, index=False, encoding='utf-8')
print(f"\n‚úÖ Saved the new file with album covers: {output_file}")
